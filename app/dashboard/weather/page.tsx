import { LatLngInput } from "./latLngInput";

export default async function Page (props: {
  searchParams? : Promise <{
    longitude?: string;
    latitude?: string;
  }>
}) {
  const searchParams = await props.searchParams;

  console.log(` Weather Page running`)

  const longitude = searchParams?.longitude || "";
  const latitude = searchParams?.latitude || "";

  const dummyData = {"hourly": { 
    "time": [ 
      "2024-04-18T00:00", 
      "2024-04-18T01:00", 
      "2024-04-18T02:00", 
      "2024-04-18T03:00", 
      "2024-04-18T04:00", 
      "2024-04-18T05:00", 
      "2024-04-18T06:00", 
      "2024-04-18T07:00", 
      "2024-04-18T08:00", 
      "2024-04-18T09:00", 
      "2024-04-18T10:00", 
      "2024-04-18T11:00", 
      "2024-04-18T12:00", 
      "2024-04-18T13:00", 
      "2024-04-18T14:00", 
      "2024-04-18T15:00", 
      "2024-04-18T16:00", 
      "2024-04-18T17:00", 
      "2024-04-18T18:00", 
      "2024-04-18T19:00", 
      "2024-04-18T20:00", 
      "2024-04-18T21:00", 
      "2024-04-18T22:00", 
      "2024-04-18T23:00", 
      "2024-04-19T00:00", 
      "2024-04-19T01:00", 
      "2024-04-19T02:00", 
      "2024-04-19T03:00", 
      "2024-04-19T04:00", 
      "2024-04-19T05:00", 
      "2024-04-19T06:00", 
      "2024-04-19T07:00", 
      "2024-04-19T08:00", 
      "2024-04-19T09:00", 
      "2024-04-19T10:00", 
      "2024-04-19T11:00", 
      "2024-04-19T12:00", 
      "2024-04-19T13:00", 
      "2024-04-19T14:00", 
      "2024-04-19T15:00", 
      "2024-04-19T16:00", 
      "2024-04-19T17:00", 
      "2024-04-19T18:00", 
      "2024-04-19T19:00", 
      "2024-04-19T20:00", 
      "2024-04-19T21:00", 
      "2024-04-19T22:00", 
      "2024-04-19T23:00", 
      "2024-04-20T00:00", 
      "2024-04-20T01:00", 
      "2024-04-20T02:00", 
      "2024-04-20T03:00", 
      "2024-04-20T04:00", 
      "2024-04-20T05:00", 
      "2024-04-20T06:00", 
      "2024-04-20T07:00", 
      "2024-04-20T08:00", 
      "2024-04-20T09:00", 
      "2024-04-20T10:00", 
      "2024-04-20T11:00", 
      "2024-04-20T12:00", 
      "2024-04-20T13:00", 
      "2024-04-20T14:00", 
      "2024-04-20T15:00", 
      "2024-04-20T16:00", 
      "2024-04-20T17:00", 
      "2024-04-20T18:00", 
      "2024-04-20T19:00", 
      "2024-04-20T20:00", 
      "2024-04-20T21:00", 
      "2024-04-20T22:00", 
      "2024-04-20T23:00", 
      "2024-04-21T00:00", 
      "2024-04-21T01:00", 
      "2024-04-21T02:00", 
      "2024-04-21T03:00", 
      "2024-04-21T04:00", 
      "2024-04-21T05:00", 
      "2024-04-21T06:00", 
      "2024-04-21T07:00", 
      "2024-04-21T08:00", 
      "2024-04-21T09:00", 
      "2024-04-21T10:00", 
      "2024-04-21T11:00", 
      "2024-04-21T12:00", 
      "2024-04-21T13:00", 
      "2024-04-21T14:00", 
      "2024-04-21T15:00", 
      "2024-04-21T16:00", 
      "2024-04-21T17:00", 
      "2024-04-21T18:00", 
      "2024-04-21T19:00", 
      "2024-04-21T20:00", 
      "2024-04-21T21:00", 
      "2024-04-21T22:00", 
      "2024-04-21T23:00", 
      "2024-04-22T00:00", 
      "2024-04-22T01:00", 
      "2024-04-22T02:00", 
      "2024-04-22T03:00", 
      "2024-04-22T04:00", 
      "2024-04-22T05:00", 
      "2024-04-22T06:00", 
      "2024-04-22T07:00", 
      "2024-04-22T08:00", 
      "2024-04-22T09:00", 
      "2024-04-22T10:00", 
      "2024-04-22T11:00", 
      "2024-04-22T12:00", 
      "2024-04-22T13:00", 
      "2024-04-22T14:00", 
      "2024-04-22T15:00", 
      "2024-04-22T16:00", 
      "2024-04-22T17:00", 
      "2024-04-22T18:00", 
      "2024-04-22T19:00", 
      "2024-04-22T20:00", 
      "2024-04-22T21:00", 
      "2024-04-22T22:00", 
      "2024-04-22T23:00", 
      "2024-04-23T00:00", 
      "2024-04-23T01:00", 
      "2024-04-23T02:00", 
      "2024-04-23T03:00", 
      "2024-04-23T04:00", 
      "2024-04-23T05:00", 
      "2024-04-23T06:00", 
      "2024-04-23T07:00", 
      "2024-04-23T08:00", 
      "2024-04-23T09:00", 
      "2024-04-23T10:00", 
      "2024-04-23T11:00", 
      "2024-04-23T12:00", 
      "2024-04-23T13:00", 
      "2024-04-23T14:00", 
      "2024-04-23T15:00", 
      "2024-04-23T16:00", 
      "2024-04-23T17:00", 
      "2024-04-23T18:00", 
      "2024-04-23T19:00", 
      "2024-04-23T20:00", 
      "2024-04-23T21:00", 
      "2024-04-23T22:00", 
      "2024-04-23T23:00", 
      "2024-04-24T00:00", 
      "2024-04-24T01:00", 
      "2024-04-24T02:00", 
      "2024-04-24T03:00", 
      "2024-04-24T04:00", 
      "2024-04-24T05:00", 
      "2024-04-24T06:00", 
      "2024-04-24T07:00", 
      "2024-04-24T08:00", 
      "2024-04-24T09:00", 
      "2024-04-24T10:00", 
      "2024-04-24T11:00", 
      "2024-04-24T12:00", 
      "2024-04-24T13:00", 
      "2024-04-24T14:00", 
      "2024-04-24T15:00", 
      "2024-04-24T16:00", 
      "2024-04-24T17:00", 
      "2024-04-24T18:00", 
      "2024-04-24T19:00", 
      "2024-04-24T20:00", 
      "2024-04-24T21:00", 
      "2024-04-24T22:00", 
      "2024-04-24T23:00" 
    ], 
    "temperature_2m": [2.9, 2.4, 2, 1.2, 0.7, 0.9, 2.6, 4.4, 6.5, 8, 8.6, 9.4, 10, 10.1, 11, 11.3, 11.2, 10.9, 10, 9, 8.3, 7.6, 7, 6.5, 5.7, 5.4, 5, 5.1, 5.2, 5.4, 5.8, 5.8, 5.7, 6.6, 6.6, 6.7, 6.5, 7.1, 7.9, 8.4, 8.4, 8.3, 7.9, 7.3, 7.1, 6.9, 6.3, 6, 5.8, 5.4, 5.1, 4.7, 4.5, 4.3, 4.4, 5, 5.5, 6.3, 6.8, 7.8, 8.1, 8.3, 8.4, 8.3, 7.7, 7, 6.1, 5.1, 4, 3.3, 2.8, 2.3, 1.8, 1.4, 1.2, 1, 0.8, 0.9, 2, 3.8, 5.2, 6, 7, 7.6, 8.3, 8.6, 8.6, 8.2, 7.4, 6.2, 5, 4, 3, 2.3, 2.1, 2.3, 2.5, 2.4, 2.3, 2.2, 2.2, 2.3, 2.6, 3.3, 4.3, 5.1, 5.6, 6, 6.4, 7, 7.5, 7.7, 7.2, 6.4, 5.6, 5.1, 4.6, 4.1, 3.6, 3.1, 2.6, 2.1, 1.6, 1.4, 1.6, 2.1, 2.4, 3.2, 5.2, 6.9, 7.9, 8.6, 9.1, 9.4, 9.5, 9.4, 9.2, 8.7, 8.1, 7.1, 5.9, 4.8, 4, 3.3, 2.7, 2.2, 1.9, 1.8, 1.9, 2.4, 3.3, 5.2, 7.5, 9.2, 9.8, 9.7, 9.5, 9.2, 8.7, 8.3, 8.1, 8, 7.8, 7.2, 6.5, 5.8, 5.3, 4.7] 
  }};

  let temperatureData : { hourly: {time: string[], temperature_2m: number []}, hourly_units: { temperature_2m: string}} | null = null;
  
  let units = "";

  if (longitude && latitude) {

    const url = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m`;

    try {
      const response = await fetch(url);
      if (response.ok) {
        temperatureData = await response.json();
      }
      console.log(`Invoked API using url: ${url}`);
    }
    catch(error) {
      console.log(error);
    }

    units = temperatureData?.hourly_units.temperature_2m || "";

  }


    return (
      <div>

        <LatLngInput />

        {!temperatureData && (
          <div>
            Please enter the required longitude and latitude for your location 
          </div>
        )}

        {temperatureData && (
          <div>
            {
              temperatureData?.hourly.time.map((time, index) => {
                return (
                  <div>
                    {time} :: {`${temperatureData?.hourly.temperature_2m[index]} ${units}`}
                  </div>
                )
              }
              )
            }
          </div>
        )}

      </div>
    )




}